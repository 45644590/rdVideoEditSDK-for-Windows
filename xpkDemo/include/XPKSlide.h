

#ifndef __XPK_SLIDE_H__
#define __XPK_SLIDE_H__


#define  XPK_API __stdcall 
#include "XPKSlideCommon.h"


/******************************************************************************************/
//描述：创建句柄
/******************************************************************************************/
Handle XPK_API xpkCreate();

/******************************************************************************************/
//描述：添加一个媒体源（视频、图片、APNG（APNG的RGBA覆盖））
//参数：
//		szPath	媒体路径
//		timeline_start	媒体在时间轴上的开始时间 (单位: 微秒)
//		timeline_end	媒体在时间轴上的开始时间 (单位: 微秒)
//		time_start 媒体本身开始播放时间 (单位: 微秒)
//      time_start 媒体本身结束播放时间 (单位: 微秒)
/******************************************************************************************/
Handle XPK_API xpkAddMedia(Handle handle, const char* szPath, int64_t timeline_start, int64_t timeline_end,
				   int64_t time_start, int64_t time_end);

/******************************************************************************************/
//描述：设置媒体的旋转角度
//参数：
//		hMedia	媒体对象
//		angle	旋转角度
/******************************************************************************************/
int	 XPK_API  xpkSetMediaRotateAngle(Handle handle,Handle hMedia,int angle);

/******************************************************************************************/
//描述：设置媒体的截取时间
//参数：
//		hMedia	媒体对象
//		time_start	媒体本身的开始时间
//		time_end	媒体本身的结束时间
/******************************************************************************************/
int	 XPK_API   xpkSetMediaCutTime(Handle handle,Handle hMedia,int64_t time_start, int64_t time_end);

/******************************************************************************************/
//描述：设置媒体的翻转方式
//参数：
//		hMedia	媒体对象
//		flip	翻转方式   参考：enum SLIDE_FLIP
/******************************************************************************************/
int	 XPK_API   xpkSetMediaFlip(Handle handle,Handle hMedia,int flip);

/******************************************************************************************/
//描述：设置媒体的裁剪区域
//参数：
//		hMedia	媒体对象
//		rtClip	裁剪区域
/*******************************************************************************************/
int  XPK_API   xpkSetMediaClip(Handle handle,Handle hMedia,RECTF rtClip);


/****************************************************************************************************/
//描述：获取转场类型的个数
/****************************************************************************************************/
int	XPK_API 	xpkGetTotalTransition();

/****************************************************************************************************/
//描述：根据转场id返回对应的转场名字
//参数：
//		id	转场id
/****************************************************************************************************/
char* XPK_API 	xpkGetTransitionName(int id);

/****************************************************************************************************/
//描述：设置媒体的转场方式		
//参数：
//		hMedia	媒体对象
//		transition	当前媒体开始的转场方式，没有转场设置0

	
//eg：媒体A + 时钟 + 媒体B，直接设置媒体A的转场为时钟 ，媒体B转场为0

/****************************************************************************************************/
int XPK_API    xpkSetMediaTransition(Handle handle,Handle hMedia,int transition);


/****************************************************************************************************/
//描述：获取滤镜类型的个数
/****************************************************************************************************/
int	XPK_API 	xpkGetTotalFilter();

/****************************************************************************************************/
//描述：根据滤镜id返回对应的滤镜名字
//参数：
//		id	滤镜id
/****************************************************************************************************/
char* XPK_API 	xpkGetFilterName(int id);


/******************************************************************************************/
//描述：设置媒体的视频滤镜(UI界面上的视频滤镜,可以同时设置多个滤镜)
//参数：hMedia 媒体对象
//      filter 滤镜类型
/******************************************************************************************/
int	XPK_API	xpkSetMediaFilter(Handle handle,Handle hMedia,int filter);


/******************************************************************************************/
//描述：删除媒体的视频滤镜(UI界面上的视频滤镜)
//参数：hMedia 媒体对象
//      filter 滤镜类型
/******************************************************************************************/
int	XPK_API xpkDeleteMeidaFilter(Handle handle,Handle hMedia,int filter);

/******************************************************************************************/
//描述：设置媒体的混音因子（视频文件）
//参数：
//		hMedia	媒体对象
//		factor	混音因子（ 0.0 - 1.0）
/******************************************************************************************/
int	 XPK_API  xpkSetMediaFactor(Handle handle,Handle hMedia,float factor);

/******************************************************************************************/
//描述：设置媒体的播放速度
//参数：
//		hMedia	媒体对象
//		fSpeed	速度
/******************************************************************************************/
int	 XPK_API   xpkSetMediaPlaySpeed(Handle handle, Handle hMedia, double fSpeed);

/******************************************************************************************/
//描述：删除指定的媒体对象
//参数：
//		hMedia	媒体对象
/******************************************************************************************/
int	XPK_API   xpkClearMedia(Handle handle,Handle hMedia);

/******************************************************************************************/
//描述：动态设置媒体的剪裁区域列表（例如：1-10秒静止显示，10-20秒显示左上角，20-30秒显示右上角）
//参数：
//		hMedia 媒体对象
//      time_start	媒体本身的开始时间
//		time_end	媒体本身的结束时间
//		rtClip		裁剪区域
/******************************************************************************************/

int	XPK_API xpkSetMediaDynamicClip(Handle handle,Handle hMedia,int64_t time_start,int64_t time_end,RECTF rtClip);


/******************************************************************************************/
//描述：添加音乐媒体
//参数：
//		path			音乐媒体路径
//		factor			混音因子（0.0-1.0）
//		start			音乐媒体本身开始播放时间 (单位: 微秒)
//      end				音乐媒体本身结束播放时间 (单位: 微秒)
//		timeline_start	音乐媒体在时间轴上的开始时间 (单位: 微秒)
//		timeline_end	音乐媒体在时间轴上的开始时间 (单位: 微秒)
/******************************************************************************************/
Handle	XPK_API xpkAddAudioMedia(Handle handle, char* path, double factor, int64_t start, int64_t end, 
					 int64_t timeline_start, int64_t timeline_end);

/******************************************************************************************/
//描述：设置音乐媒体混音
//参数：
//		hAudio			音乐媒体句柄
//		factor			混音因子（0.0-1.0）
/******************************************************************************************/
int	XPK_API xpkSetAudioMediaVolFactor(Handle handle,Handle hAudio,double factor);

/******************************************************************************************/
//描述：设置音乐媒体的截取时间
//参数：
//		hAudio			音乐媒体句柄
//		start			音乐媒体在时间轴上的开始时间 (单位: 微秒)
//		end				音乐媒体在时间轴上的开始时间 (单位: 微秒)
/******************************************************************************************/
int	XPK_API xpkSetAudioMediaCutTime(Handle handle,Handle hAudio,int64_t start, int64_t end);

/******************************************************************************************/
//描述：设置音乐媒体的淡入/淡出时间
//参数：
//		hAudio			音乐媒体句柄
//		fadein			音乐媒体在时间轴上的淡入时间 (单位: 微秒)
//		fadeout			音乐媒体在时间轴上的淡出时间 (单位: 微秒)
/******************************************************************************************/
int	XPK_API xpkSetAudioMediaFadeTime(Handle handle,Handle hAudio,int64_t fadein, int64_t fadeout);

/******************************************************************************************/
//描述：设置音乐媒体的播放速度
//参数：
//		hAudio			音乐媒体句柄
//		speed			速度
/******************************************************************************************/
int	XPK_API xpkSetAudioMediaPlaySpeed(Handle handle,Handle hAudio,double speed);

/******************************************************************************************/
//描述：删除指定的音乐媒体对象
//参数：
//		hMedia	媒体对象
/******************************************************************************************/
int	XPK_API xpkClearAudioMedia(Handle handle,Handle hAudio);

/******************************************************************************************/
//描述：删除所有的音乐媒体对象
/******************************************************************************************/
int	XPK_API xpkClearAllAudioMedias(Handle handle);


/******************************************************************************************/
//描述：添加字幕
//参数：
//		pText					字幕文本
/******************************************************************************************/
Handle XPK_API xpkAddSubtitleText(Handle handle,char* pText);

/******************************************************************************************/
//描述：添加字幕文件（*.srt）
//参数：
//		srtPath					字幕文件
/******************************************************************************************/
Handle  XPK_API  xpkSubtitleStrPath(Handle handle,char* srtPath);

/******************************************************************************************/
//描述：设置字幕显示时间
//参数：
//		hSubtitle				字幕句柄
//		timeline_start			字幕开始时间
//		timeline_end			字幕结束时间
/******************************************************************************************/
int   XPK_API xpkSetSubtitleTime(Handle handle,Handle hSubtitle,int64_t timeline_start,int64_t timeline_end);

/******************************************************************************************/
//描述：设置字幕显示区域
//参数：
//		hSubtitle			字幕句柄
//		rect				显示区域
/******************************************************************************************/
int   XPK_API xpkSetSubtitleRect(Handle handle,Handle hSubtitle,RECTF rect);

/******************************************************************************************/
//描述：设置字幕字体属性
//参数：
//		hSubtitle			字幕句柄
//		font				字体属性（颜色、大小、下划线、加粗....）
/******************************************************************************************/
int	  XPK_API xpkSetSubtitleFont(Handle handle,Handle hSubtitle,FONT_PEP font);

/******************************************************************************************/
//描述：设置字幕字体效果 
//参数：
//		hSubtitle			字幕句柄
//		effect				字体效果
//		clr					效果颜色
/******************************************************************************************/
int  XPK_API xpkSetSubTitleEffect(Handle handle ,Handle hSubtitle,int effect,RGBQUAD clr);

/******************************************************************************************/
//描述：删除指定字幕
//参数：
//		hSubtitle			字幕句柄
/******************************************************************************************/
int	  XPK_API xpkClearSubtitle(Handle handle,Handle hSubtitle);

/******************************************************************************************/
//描述：删除所有字幕
/******************************************************************************************/
int	  XPK_API xpkClearAllSubtitle(Handle handle);


/******************************************************************************************/
//描述：设置预览或者输出画面的大小
//参数：
//		width			宽
//		height			高
/******************************************************************************************/
int	  XPK_API xpkSetFrameSize(Handle handle,int width, int height);

/******************************************************************************************/
//描述：预览初始化相关
//参数：
//		hParentWnd		预览显示画面的窗口句柄
/******************************************************************************************/
int	  XPK_API xpkPreviewInit(Handle handle,HWND hParentWnd);

/******************************************************************************************/
//描述：通知播放结束的回调函数
//参数：
//		cb_play_finish  回调函数
//		pUser			回调函数自定义参数
/******************************************************************************************/
int	   XPK_API xpkSetPreviewPlayFinishCallback(Handle handle,cb_play_finish cb_preview_play_finish,void* pUser);

/******************************************************************************************/
//描述：预览
/******************************************************************************************/
int   XPK_API xpkPreview(Handle handle);

/******************************************************************************************/
//描述：预览暂停
/******************************************************************************************/
int   XPK_API xpkPreviewPause(Handle handle);

/******************************************************************************************/
//描述：预览继续
/******************************************************************************************/
int	  XPK_API xpkPreviewConintue(Handle handle);

/******************************************************************************************/
//描述：预览停止
/******************************************************************************************/
int   XPK_API xpkPreviewStop(Handle handle);

/******************************************************************************************/
//描述：预览seek
/******************************************************************************************/
int  XPK_API  xpkPreviewSeek(Handle handle, int64_t seek_time);

/******************************************************************************************/
//描述：获取总时间
/******************************************************************************************/
int64_t	XPK_API xpkGetTotalPlaybackTime(Handle handle);

/******************************************************************************************/
//描述：获取当前正在播放的时间
/******************************************************************************************/
int64_t XPK_API xpkGetCurrentPlaybackTime(Handle handle);

/******************************************************************************************/
//描述：输出本地文件初始化相关
//参数：
//		hParentWnd		显示制作过程中帧画面的窗口句柄
/******************************************************************************************/
int	 XPK_API  xpkEditInit(Handle handle,HWND hParentWnd);

/******************************************************************************************/
//描述：设置输出文件的路径
//参数：
//		path		输出文件的路径
/******************************************************************************************/
int	  XPK_API xpkSetOutPath(Handle handle, const char* path);

/******************************************************************************************/
//描述：制作输出本地文件
/******************************************************************************************/
int XPK_API   xpkEditMedia(Handle handle);

/******************************************************************************************/
//描述：停止制作输出本地文件
/******************************************************************************************/
int  XPK_API  xpkEditStop(Handle handle);

/******************************************************************************************/
//描述：获取当前的制作进度（0-100）
/******************************************************************************************/
int	  XPK_API xpkEditProgress(Handle handle);

/******************************************************************************************/
//描述：关闭句柄
/******************************************************************************************/
int	 XPK_API  xpkCloseMediaEditor(Handle handle);




/******************************************************************************************/
//描述：侦测媒体类型 通过解码  参考：MEDIA_TYPES
//参数：
//		path	媒体路径      
//
/******************************************************************************************/	
enum MEDIA_TYPES XPK_API xpkDetectMediaType(const char* path);


/******************************************************************************************/
//描述：RGB32格式缩放
//参数：
//		iInWidth		缩放前数据的宽
//		iInHeight		缩放前数据的高
//		lpInBuffer		缩放前的数据
//		iInPitch		缩放前的扫描行
//		iOutWidth		缩放后数据的宽
//		iOutHeight		缩放后数据的高
//		lpOutBuffer		缩放后的数据
//		iOutPitch		缩放后的扫描行
/******************************************************************************************/	
int XPK_API xpkStretchRGB32(int iInWidth, int iInHeight, uint8_t* lpInBuffer, int iInPitch, int iOutWidth, 
					int iOutHeight, uint8_t *lpOutBuffer, int iOutPitch);



/******************************************************************************************/
//描述：获取媒体音频视频信息
//参数：
//		szMediaPath		文件路径
//		duration		时长
//		audioAttr		音频参数
//		videoAttr		视频参数
/******************************************************************************************/	
int	XPK_API xpkGetMediaInfo(const char* szMediaPath, int64_t *duration, Audio_Stream_Info *audioAttr, 
					Video_Stream_Info *videoAttr);


/******************************************************************************************/
//描述：获取缩略图
//参数：
//		time		对应时间的缩略图
//		width		缩略图宽
//		height		缩略图高
//		data		缩略图数据
/******************************************************************************************/	
int	XPK_API xpkGetSnapShot(Handle handle,uint64_t time,int width, int height, uint8_t* data);



/******************************************************************************************/
//描述：创建文字位图（bmp格式）
/******************************************************************************************/	
Handle XPK_API xpkCreateTextBmp();


/******************************************************************************************/
//描述：设置文字位图的宽高（如果没有设置位图宽高，默认输出位图宽高640x480）
//参数：
//		handle		句柄
//		width		文字位图的宽
//		height		文字位图的高
/******************************************************************************************/	
int XPK_API xpkSetTextBmpSize(Handle handle,int width,int height);


/******************************************************************************************/
//描述：设置文字位图的文字显示位置（如果没有设置，默认文字居中显示）
//参数：
//		handle		句柄
//		width		文字位图的宽
//		height		文字位图的高
/******************************************************************************************/
int XPK_API xpkSetTextBmpTextRect(Handle handle,RECTF rect);


/******************************************************************************************/
//描述：设置文字位图的背景颜色
//参数：
//		handle		句柄
//		clr			rgb值（0-255）
/******************************************************************************************/	
int XPK_API xpkSetTextBmpBackGroundColor(Handle handle,RGBQUAD clr);


/******************************************************************************************/
//描述：设置文字位图的文字
//参数：
//		handle		句柄
//		pText		文字
/******************************************************************************************/	
int XPK_API xpkSetTextBmpText(Handle handle,char* pText);


/******************************************************************************************/
//描述：设置文字位图的文字字体风格（字体大小、颜色、风格）
//参数：
//		handle		句柄
//		font		字体风格
/******************************************************************************************/	
int XPK_API xpkSetTextBmpTextFont(Handle handle,FONT_PEP font);

/******************************************************************************************/
//描述：设置文字位图的输出目录
//参数：
//		handle		句柄
//		path		输出路径+名字
/******************************************************************************************/
int XPK_API xpkSetTextBmpOutPutPath(Handle handle,char* path);


/******************************************************************************************/
//描述：制作文字位图
//参数：
//		handle		句柄
/******************************************************************************************/
int XPK_API xpkEditTextBmp(Handle handle);

/******************************************************************************************/
//描述：文字位图释放资源
//参数：
//		handle		句柄
/******************************************************************************************/
int XPK_API xpkDestroyTextBmp(Handle handle);

#endif